<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">

		<mvc:argument-resolvers>
			<bean class="com.mrwind.common.spring.JsonHandlerMethodArgumentResolver" />
			<bean class="com.mrwind.common.spring.JsonParamArgumentResolver" />
		</mvc:argument-resolvers>
		<mvc:message-converters register-defaults="true">
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为true -->
			<!-- 配置Fastjson支持 -->
			<bean class="com.mrwind.common.spring.CustomerFastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/json;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<!-- 避免默认的循环引用替换 -->
						<value>DisableCircularReferenceDetect</value>
						<!-- 输出key时是否使用双引号 -->
						<value>QuoteFieldNames</value>
						<!-- 是否输出值为null的字段 -->
						<value>WriteMapNullValue</value>
						<!-- 数值字段如果为null,输出为0,而非null -->
						<value>WriteNullNumberAsZero</value>
						<!-- List字段如果为null,输出为[],而非null -->
						<!--<value>WriteNullListAsEmpty</value> -->
						<!-- 字符类型字段如果为null,输出为"",而非null -->
						<value>WriteNullStringAsEmpty</value>
						<!-- Boolean字段如果为null,输出为false,而非null -->
						<value>WriteNullBooleanAsFalse</value>
						<!-- null String不输出 -->
						<!-- <value>WriteNullStringAsEmpty</value> -->
						<!-- null String也要输出 -->
						<value>WriteMapNullValue</value>
					</list>
				</property>
				<property name="defaultDateFormat" value="yyyy-MM-dd'T'HH:mm:ssZ"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<!-- 这里是否忽略掉accept header，默认就是false -->
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="com.mrwind" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>

	<!-- 打开aop 注解 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**" /> <ref 
		bean="sslInterceptor" /> </mvc:interceptor> <mvc:interceptor> <mvc:mapping 
		path="/**" /> <ref bean="encodingInterceptor" /> </mvc:interceptor> <mvc:interceptor> 
		<mvc:mapping path="/**" /> <ref bean="authInterceptor" /> </mvc:interceptor> 
		<mvc:interceptor> <mvc:mapping path="/**" /> <ref bean="logInterceptor" /> 
		</mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**" /> <ref bean="paramValidateInterceptor" 
		/> </mvc:interceptor> </mvc:interceptors> -->
</beans>